import pandas as pd
import tkinter as tk
from tkinter import filedialog
from tkinter import ttk

def browse_file():
    file_path = filedialog.askopenfilename(filetypes=[("Excel Files", "*.xlsx")])
    if file_path:
        entry_file_path.delete(0, tk.END)
        entry_file_path.insert(tk.END, file_path)

def apply_filter():
    file_path = entry_file_path.get()
    column_name = entry_column_name.get()
    filter_value = entry_filter_value.get()
    filter_type = combo_filter_type.get()

    try:
        df = pd.read_excel(file_path)
        if filter_type == "Equals":
            df = df[df[column_name] == filter_value]
        elif filter_type == "Less than":
            df = df[df[column_name] < filter_value]
        elif filter_type == "Greater than":
            df = df[df[column_name] > filter_value]
        elif filter_type == "Less than or equal to":
            df = df[df[column_name] <= filter_value]
        elif filter_type == "Greater than or equal to":
            df = df[df[column_name] >= filter_value]
        elif filter_type == "Between":
            filter_value2 = entry_filter_value2.get()
            df = df[(df[column_name] >= filter_value) & (df[column_name] <= filter_value2)]
        elif filter_type == "Contains":
            df = df[df[column_name].str.contains(filter_value)]
        else:
            raise ValueError("Invalid filter type")

        df.to_excel('output.xlsx', index=False)
        status_label.configure(text="Filter applied and saved to output.xlsx")
    except Exception as e:
        status_label.configure(text="Error: " + str(e))

def make_change():
    file_path = entry_file_path.get()
    row_index = int(entry_row_index.get())
    column_name = entry_column_name.get()
    new_value = entry_new_value.get()

    try:
        df = pd.read_excel(file_path)
        df.at[row_index, column_name] = new_value
        df.to_excel(file_path, index=False)
        status_label.configure(text="Change saved to original file")
    except Exception as e:
        status_label.configure(text="Error: " + str(e))

# Create the main window
window = tk.Tk()
window.title("Excel Filter and Edit App")

# Create widgets
label_file_path = tk.Label(window, text="Excel File:")
entry_file_path = tk.Entry(window)
button_browse = tk.Button(window, text="Browse", command=browse_file)

label_column_name = tk.Label(window, text="Column Name:")
entry_column_name = tk.Entry(window)

label_filter_value = tk.Label(window, text="Filter Value:")
entry_filter_value = tk.Entry(window)

label_filter_type = tk.Label(window, text="Filter Type:")
combo_filter_type = ttk.Combobox(window, values=["Equals", "Less than", "Greater than", "Less than or equal to", "Greater than or equal to", "Between", "Contains"], state="readonly")
combo_filter_type.current(0)  # Set the default filter type

label_filter_value2 = tk.Label(window, text="Filter Value 2:")
entry_filter_value2 = tk.Entry(window)

button_apply_filter = tk.Button(window, text="Apply Filter", command=apply_filter)

label_row_index = tk.Label(window, text="Row Index:")
entry_row_index = tk.Entry(window)

label_new_value = tk.Label(window, text="New Value:")
entry_new_value = tk.Entry(window)

button_make_change = tk.Button(window, text="Make Change", command=make_change)

status_label = tk.Label(window, text="")

# Layout widgets using grid
label_file_path.grid(row=0, column=0, padx=5, pady=5, sticky=tk.E)
entry_file_path.grid(row=0, column=1, padx=5, pady=5)
button_browse.grid(row=0, column=2, padx=5, pady=5)

label_column_name.grid(row=1, column=0, padx=5, pady=5, sticky=tk.E)
entry_column_name.grid(row=1, column=1, padx=5, pady=5)

label_filter_value.grid(row=2, column=0, padx=5, pady=5, sticky=tk.E)
entry_filter_value.grid(row=2, column=1, padx=5, pady=5)

label_filter_type.grid(row=2, column=2, padx=5, pady=5, sticky=tk.E)
combo_filter_type.grid(row=2, column=3, padx=5, pady=5)

label_filter_value2.grid(row=2, column=4, padx=5, pady=5, sticky=tk.E)
entry_filter_value2.grid(row=2, column=5, padx=5, pady=5)

button_apply_filter.grid(row=3, column=1, padx=5, pady=5)

label_row_index.grid(row=4, column=0, padx=5, pady=5, sticky=tk.E)
entry_row_index.grid(row=4, column=1, padx=5, pady=5)

label_new_value.grid(row=5, column=0, padx=5, pady=5, sticky=tk.E)
entry_new_value.grid(row=5, column=1, padx=5, pady=5)

button_make_change.grid(row=6, column=1, padx=5, pady=5)

status_label.grid(row=7, column=0, columnspan=6, padx=5, pady=5)

# Start the GUI event loop
window.mainloop()
